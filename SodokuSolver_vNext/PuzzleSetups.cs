namespace SodokuSolver_vNext
{
	internal static class PuzzleSetups
	{
		public static PuzzleSetup[] PUZZLES = new PuzzleSetup[]
		{
			new PuzzleSetup("easy1", new byte[]
			{
				0,2,0,1,7,8,0,3,0,
				0,4,0,3,0,2,0,9,0,
				1,0,0,0,0,0,0,0,6,
				0,0,8,6,0,3,5,0,0,
				3,0,0,0,0,0,0,0,4,
				0,0,6,7,0,9,2,0,0,
				9,0,0,0,0,0,0,0,2,
				0,8,0,9,0,1,0,6,0,
				0,1,0,4,3,6,0,5,0
			}),
			new PuzzleSetup("easy2", new byte[]
			{
				0,4,6,2,8,0,0,0,0,
				5,0,0,6,0,0,7,4,0,
				2,0,0,0,0,0,0,0,0,
				0,0,5,0,3,2,0,7,0,
				0,2,1,0,0,0,4,8,0,
				0,3,0,1,7,0,5,0,0,
				0,0,0,0,0,0,0,0,5,
				0,9,4,0,0,1,0,0,7,
				0,0,0,0,9,6,8,3,0
			}),
			new PuzzleSetup("easy3", new byte[]
			{
				9,5,6,0,8,0,0,0,1,
				4,0,0,0,0,0,7,9,0,
				0,3,0,4,1,0,0,0,0,
				0,0,0,0,0,3,6,0,0,
				0,0,0,5,0,8,0,0,0,
				0,0,2,9,0,0,0,0,0,
				0,0,0,0,7,6,0,2,0,
				0,8,7,0,0,0,0,0,3,
				1,0,0,0,9,0,8,7,4
			}),
			new PuzzleSetup("easy4", new byte[]
			{
				9,0,7,0,8,0,0,0,0,
				3,0,0,6,0,0,0,0,0,
				0,6,0,0,0,0,2,0,7,
				0,3,0,0,5,0,7,0,0,
				7,1,0,9,0,6,0,3,2,
				0,0,9,0,3,0,0,1,0,
				8,0,2,0,0,0,0,4,0,
				0,0,0,0,0,4,0,0,6,
				0,0,0,0,1,0,8,0,3
			}),
			// solved using candidate line elimination
			new PuzzleSetup("medium1", new byte[]
			{
				0,4,0,0,0,1,9,3,0,
				3,0,0,0,0,0,0,0,8,
				0,0,0,3,8,0,0,1,0,
				0,0,0,0,2,0,8,0,0,
				0,6,0,1,0,3,0,7,0,
				0,0,5,0,6,0,0,0,0,
				0,5,0,0,1,6,0,0,0,
				2,0,0,0,0,0,0,0,6,
				0,1,6,7,0,0,0,5,0
			}),
			// solved
			new PuzzleSetup("difficult2", new byte[]
			{
				0,4,3,0,0,8,0,0,5,
				7,0,0,4,0,0,0,2,0,
				0,0,0,0,1,0,8,0,0,
				0,0,4,0,6,0,0,0,0,
				0,3,0,0,9,0,0,7,0,
				0,0,0,0,8,0,9,0,0,
				0,0,5,0,2,0,0,0,0,
				0,8,0,0,0,7,0,0,6,
				1,0,0,8,0,0,7,5,0
			}),
			// solved
			new PuzzleSetup("tricky1", new byte[]
			{
				0,7,0,3,0,5,6,0,0,
				0,5,0,8,0,0,3,0,9,
				0,9,0,4,0,0,0,0,0,
				0,3,0,0,0,0,7,0,0,
				0,0,0,5,4,2,0,0,0,
				0,0,9,0,0,0,0,8,0,
				0,0,0,0,0,1,0,3,0,
				4,0,3,0,0,8,0,1,0,
				0,0,7,9,0,4,0,6,0
			}),
			// solved
			new PuzzleSetup("fiendish1", new byte[]
			{
				0,7,0,5,0,0,2,0,0,
				5,0,0,0,0,8,0,0,9,
				9,0,4,0,3,0,0,7,5,
				0,0,0,0,0,3,0,0,0,
				0,8,3,0,1,0,9,5,0,
				0,0,0,6,0,0,0,0,0,
				6,4,0,0,2,0,3,0,7,
				1,0,0,3,0,0,0,0,4,
				0,0,9,0,0,6,0,1,0
			}),
			new PuzzleSetup("al escargot", new byte[]
			{
			   8,5,0,0,0,2,4,0,0,
			   7,2,0,0,0,0,0,0,9,
			   0,0,4,0,0,0,0,0,0,
			   0,0,0,1,0,7,0,0,2,
			   3,0,5,0,0,0,9,0,0,
			   0,4,0,0,0,0,0,0,0,
			   0,0,0,0,8,0,0,7,0,
			   0,1,7,0,0,0,0,0,0,
			   0,0,0,0,3,6,0,4,0
			}),
			// not solved
			new PuzzleSetup("diabolical1", new byte[]
			{
				0,0,0,0,0,1,0,0,0,
				0,0,0,6,9,0,0,3,5,
				0,5,0,3,0,0,2,0,7,
				0,0,7,1,0,0,0,0,4,
				0,8,0,0,4,0,0,6,0,
				2,0,0,0,0,8,3,0,0,
				6,0,5,0,0,3,0,7,0,
				3,1,0,0,7,6,0,0,0,
				0,0,0,8,0,0,0,0,0,
			}),
			// not solved
			new PuzzleSetup("difficult1", new byte[]
			{
				7,0,8,0,0,0,3,0,0,
				0,0,0,2,0,1,0,0,0,
				5,0,0,0,0,0,0,0,0,
				0,4,0,0,0,0,0,2,6,
				3,0,0,0,8,0,0,0,0,
				0,0,0,1,0,0,0,9,0,
				0,9,0,6,0,0,0,0,4,
				0,0,0,0,7,0,5,0,0,
				0,0,0,0,0,0,0,0,0
			}),
			// not solved
			new PuzzleSetup("world champ", new byte[]
			{
				8,0,0,0,0,0,0,0,0,
				0,0,3,6,0,0,0,0,0,
				0,7,0,0,9,0,2,0,0,
				0,5,0,0,0,7,0,0,0,
				0,0,0,0,4,5,7,0,0,
				0,0,0,1,0,0,0,3,0,
				0,0,1,0,0,0,0,6,8,
				0,0,8,5,0,0,0,1,0,
				0,9,0,0,0,0,4,0,0
			})
		};
	}
}
